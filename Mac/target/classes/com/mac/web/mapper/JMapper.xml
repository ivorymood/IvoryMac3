<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mac.web.mapper.JMapper">
<resultMap type="java.util.HashMap" id="address">
	<id property="rownum" column="rownum"/>
	<result property="addr" column="addr"/>
</resultMap>
<resultMap type="java.util.HashMap" id="customer">
	<id property="customId" column="custom_id"/>
	<result property="customPass" column="custom_pass"/>
	<result property="name" column="name"/>
	<result property="email" column="email"/>
	<result property="phoneNum" column="phone_num"/>
	<result property="profile" column="profile"/>
	<result property="joinDate" column="join_date"/>
	<result property="gradeCode" column="grade_code"/>
	<result property="consumption" column="consumption"/>
</resultMap>
<resultMap type="java.util.HashMap" id="itemInfo">
	<id property="rownum" column="rownum"/>
	<result property="itemName" column="itemName"/>
	<result property="commonName" column="commonName"/>
	<result property="commonNameE" column="commonNameE"/>
	<result property="textureExp" column="textureExp"/>
	<result property="itemCount" column="itemCount"/>
	<result property="price" column="price"/>
	<result property="picName" column="picName"/>
	<result property="itemCode" column="itemCode"/>
	<result property="itemSeq" column="itemSeq"/>
	<result property="colorExp" column="colorExp"/>
	<result property="discountPrice" column="discountPrice"/>
	<result property="total" column="total"/>
	<result property="eachTotal" column="eachTotal"/>
	<result property="basketSeq" column="basketSeq"/>
	<result property="addrSeq" column="addrSeq"/>
	<result property="orderSeq" column="orderSeq"/>
	<result property="discountedTotal" column="discountedTotal"/>
	<result property="discountAmount" column="discountAmount"/>
	
</resultMap>

<select  id="selectIdExist" resultType="int" parameterType="com.mac.web.domain.Command">
 		SELECT COUNT(*)
 		  FROM customer
 		 WHERE custom_id = #{col1}
 		   AND custom_id is not null 
</select>
<select id="exist" resultType="int" parameterType="com.mac.web.domain.Command">
    SELECT count(*)
      FROM ${type} 
     WHERE ${col1} like #{data1}
       AND ${col2} like #{data2} 
</select>
<select id="existIntData" resultType="int" parameterType="hashMap">
    SELECT count(*)
      FROM ${type}  
     WHERE ${col1} like ${data1}
       AND ${col2} like #{data2} 
</select>
<select id="existIntBasket" resultType="int" parameterType="hashMap">
		SELECT COUNT(*)
 		  FROM basket
 		 WHERE custom_id = #{customId}
</select>
<select id="selectItemStock" resultType="int" parameterType="hashMap">
	SELECT item_stock as itemStock
      FROM item 
     WHERE ${col1} = ${data1} 
</select>
<select id="selectAddrExist" resultType="int" parameterType="com.mac.web.domain.Command">
    SELECT COUNT(*)
      FROM address 
     WHERE custom_id = #{col1}
</select>


<select id="selectMypage" resultMap="customer" parameterType="hashMap">
 	SELECT *
 	  FROM customer
 	 WHERE custom_id = #{customId}
</select>  
<select id="selectAddrSeqById" resultMap="itemInfo" parameterType="hashMap" >
    SELECT a.*
	FROM (SELECT @rownum := @rownum +1 As rownum
		  		 , t.*
     		FROM	(SELECT  a.addr_seq as addrSeq
				  	  FROM   address a 
				      JOIN   customer c
				        ON 	a.custom_id like c.custom_id
				     WHERE   a.custom_id = #{customId}
				       AND   a.base is not null) t,
					(select @rownum:=0) tmp) a
</select>
<select id="selectLastAddrSeq" resultType="int" parameterType="hashMap">
select t.addrSeq 
from (SELECT addr_seq as addrSeq 
	  FROM address
 	 WHERE custom_id like #{cutomId}) t
order by t.addrSeq desc limit 1;

</select>
<select id="selectLastOrderSeq" resultType="int" parameterType="hashMap"> select t.orderSeq 
from (SELECT order_seq as orderSeq
	 FROM orders
 	 WHERE custom_id like #{customId}) t
order by t.orderSeq desc limit 1;

</select>
<select id="selectTotalPrice" resultMap="itemInfo" parameterType="hashMap">
    SELECT a.*
	FROM (SELECT @rownum := @rownum +1 As rownum
		  		 , t.*
     		FROM	(SELECT  sum((a.price*(1-a.discount))*b.item_count) as discountedTotal,
     						 sum(a.price*b.item_count) as total,
							 sum(a.price*a.discount*b.item_count) as discountAmount
       				FROM  basket b
			        join  item i
			         on  i.item_seq like b.item_seq
			        join  customer c
			         on  c.custom_id like b.custom_id
			        join  common_feature a
			         on  a.item_code like i.item_code  
			        WHERE  i.item_seq = b.item_seq
			         AND  b.custom_id = #{customId}
			         AND  a.item_code = i.item_code) t,
					(select @rownum:=0) tmp) a

</select>
<select id="selectMainItems" resultMap="itemInfo" parameterType="hashMap"> <!-- 플래그 -->
    SELECT a.*
	FROM (SELECT @rownum := @rownum +1 As rownum
		  		 , t.*
     		FROM	(SELECT  i.item_name as itemName
     						, c.common_name as commonName
     						, c.common_name_e as commonNameE
          					, i.texture_exp as textureExp
          					, i.item_seq as itemSeq
          					, i.pic_name as picName 
          					, i.item_code as itemCode
          					, c.price*(1-c.discount) as discountPrice
      					FROM  item i 
      					join  common_feature c 
        				on  i.item_code like c.item_code) t,
					(select @rownum:=0) tmp) a

</select>
<select id="selectMypageItem" resultMap="itemInfo" parameterType="hashMap">
	SELECT a.*
	FROM (SELECT @rownum := @rownum +1 As rownum
		  		 , t.*
     		FROM	(SELECT  item_name as itemName
				   	  	  , pic_name as picName
				   	  	  , i.item_seq as itemSeq
				   	  	  , a.item_code as itemCode
				 		  , item_count as itemCount
				 		  , price 
				   	  	  , price-(a.price*(a.discount)) as discountPrice	  	  
				  	  FROM  basket b 
				  	  join  item i 
				  	    on  i.item_seq like b.item_seq 
				      join  common_feature a
					    on  a.item_code like i.item_code   
				 	 WHERE  i.item_seq = b.item_seq
				       AND  b.custom_id = #{customId}) t,
					(select @rownum:=0) tmp) a
	
</select>   
<!-- 수정예정 -->
<select id="selectOrderById" resultMap="itemInfo" parameterType="hashMap">
	SELECT a.*
	FROM (SELECT @rownum := @rownum +1 As rownum
		  		 , t.*
     		FROM	(SELECT  item_name as itemName
				   	  	  , pic_name as picName
				   	  	  , i.item_seq as itemSeq
				   	  	  , a.item_code as itemCode
				 		  , item_count as itemCount
				 		  , price 
				   	  	  , price*(1-a.discount) as discountPrice	  	  
				   	  	  , (price*(1-a.discount))*b.item_Count as eachTotal
				  	  FROM  basket b 
				  	  join  item i 
				  	    on  i.item_seq like b.item_seq 
				      join  common_feature a
					    on  a.item_code like i.item_code   
				 	 WHERE  i.item_seq = b.item_seq
				       AND  b.custom_id = #{customId}) t,
					(select @rownum:=0) tmp) a
</select>     
<select id="selectBasket" resultMap="itemInfo" parameterType="hashMap">
 	SELECT a.*		
	FROM (SELECT @rownum := @rownum +1 As rownum
				, t.*
			FROM (SELECT  i.item_name as itemName
						, c.common_name as commonName
						, c.common_name_e as commonNameE
						, b.basket_seq as basketSeq
              			, i.pic_name as picName
              			, i.item_seq as itemSeq
              			, c.item_code as itemCode
             			, b.item_count as itemCount
             			, c.price as price
              			, c.price*(1-c.discount) as discountPrice
              			, (c.price*(1-c.discount))*b.item_Count as eachTotal
       				FROM  basket b
       				join  item i
         			on    i.item_seq like b.item_seq
     				join  common_feature c
       	 			on     c.item_code like i.item_code  
     				WHERE  i.item_seq = b.item_seq
      				AND    b.custom_id = #{customId}
      			ORDER BY  b.basket_seq desc) t,
	   			(select @rownum:=0) tmp) a
 
</select> 
     

<insert id="insertBasketNew" parameterType="hashMap">
        insert into basket(custom_id
                         , item_seq
                         , item_count
                         , item_code
                 ) values(#{customId}
                         , ${itemSeq}
                         , 1
                         , (select item_code
							from item
							where item_seq like ${itemSeq})
                          )
</insert>
<insert id="insertOrderAddr"  parameterType="hashMap">
        INSERT INTO address(
        				   custom_id
                         , name
                         , phone_num
                         , addr
                         , zip_code
                         , board
                          ) values(
                           #{customId}
                         , #{name}
                         , #{phoneNum}
                         , #{addr}
                         , #{zipCode}
                         , #{board}
                          )
                         
</insert>
<insert id="insertCustomer" parameterType="hashMap" >
    	INSERT INTO customer(
			   		   custom_id
                     , custom_pass
                     , name
                     , email
                     , phone_num
                     , profile
                     , join_date
                      ) values (
                       #{inputJoinId}
                     , #{inputJoinPass}
                     , #{inputJoinName}
                     , #{inputJoinEmail}
                     , #{inputJoinPhoneNum}
                     , #{inputJoinMypageProfile}
                     , now()
                      )
</insert>
<insert id="insertOrder" parameterType="hashMap">

insert into orders(custom_id, total_price, order_date, addr_seq)
values(#{customId}, ${totalPrice}, now(), ${addrSeq})
			
</insert>
<insert id="insertOrderedItems" parameterType="hashMap">
	INSERT into ordered_items(item_seq, item_count, order_seq)
	VALUES( ${itemSeq}, 
			${itemCount}, 
			${orderSeq})
</insert>

<update id="updateItemStock" parameterType="hashMap" >
    	UPDATE item 
    	   SET item_stock = item_stock-${itemCount}
    	 WHERE item_seq = ${itemSeq}
</update>
<update id="updateBasketExist" parameterType="hashMap" >
    	UPDATE basket 
    	   SET item_count = item_count+1
    	 WHERE custom_id = #{customId}
    	   AND item_seq = ${itemSeq}
</update>
<update id="updateBasketAsOrder" parameterType="hashMap" ><!-- 처리예정 -->
    	UPDATE basket 
    	   SET item_count = #{itemCount}
    	 WHERE item_seq = #{itemSeq} 
</update>

<delete id="deleteBasketByBasketSeq" parameterType="hashMap">
    		DELETE
  			  FROM basket
  			 WHERE basket_seq = #{basketSeq}
</delete>
<delete id="deleteBasketById" parameterType="hashMap">
	DELETE
	  FROM basket
	 WHERE custom_id like #{customId}
</delete>

</mapper>